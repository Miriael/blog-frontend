---
interface Props {
	id: string;
	title: string;
	content: string;
  timestamp: Date;
  author: string;
  commentCount: number;
  editedTimestamp?: any;
}

const { id, title, content, timestamp, author, commentCount, editedTimestamp = false } = Astro.props;
const convertedTimestamp = new Date(timestamp)
const convertedEditedTimestamp = editedTimestamp ? new Date(editedTimestamp) : false
---

<article class="blogpost-preview">
  <h2>{title}</h2>
  <div class="wrapper">
    <address>Author: {author}</address>
    <time datetime={convertedTimestamp.toString()}>Posted: {convertedTimestamp.toString()}</time>
    {convertedEditedTimestamp && <time datetime={convertedEditedTimestamp.toString()}>Last edited: {convertedEditedTimestamp}</time>}
  </div>
  <p>{content}</p>
	<a href={`/posts/${id}`}>{commentCount} comments</a>
</article>

<script>

</script>

<style>
  article {
    margin-inline: auto;
    width: min(75dvw, 70ch);
    display: flex;
    flex-direction: column;
  }
  .wrapper {
    display: flex;
    flex-direction: column;
    align-items:flex-end;
    line-height: 1.5em
  }
  address {
    font-style: normal;
  }
  .wrapper::after{
    content: '';
    height: 1px;
    width: 40%;
    border-top: 1px solid black;
  }
  a {
    align-self: flex-end;
  }
</style>